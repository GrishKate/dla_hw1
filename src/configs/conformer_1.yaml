defaults:
  - model: conformer
  - writer: cometml
  - metrics: example
  - datasets: example
  - dataloader: example
  - transforms: example
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 5e-4
  weight_decay: 1e-05
lr_scheduler1:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 5e-4
  pct_start: 0.02
  steps_per_epoch: 500
  epochs:  50
  anneal_strategy: cos
lr_scheduler2:
  _target_: torch.optim.lr_scheduler.StepLR
  step_size: 5000
  gamma: 1.0
loss_function:
  _target_: src.loss.CTCLossWrapper
text_encoder:
  _target_: src.text_encoder.CTCTextEncoder
  use_bpe: False
  vocab_size: 100
trainer:
  log_step: 100
  n_epochs: 50
  epoch_len: 500
  device_tensors: ["spectrogram", "text_encoded"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_WER_(Argmax)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
  max_gradient: 400